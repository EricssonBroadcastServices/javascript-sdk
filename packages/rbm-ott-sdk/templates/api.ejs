<%
const { utils, route, config, modelTypes } = it;
const { _, pascalCase, require } = utils;
const apiClassName = pascalCase(route.moduleName);
const routes = route.routes;
const dataContracts = _.map(modelTypes, "name");
//console.warn(routes[0].routeName)
%>

<% if (config.httpClientType === config.constants.HTTP_CLIENT.AXIOS) { %> import type { AxiosRequestConfig, AxiosResponse } from "axios"; <% } %>

import { RequestParams, ServiceContext, request } from "./<%~ config.fileNames.httpClient %>";
<% if (dataContracts.length) { %>
import { <%~ dataContracts.join(", ") %> } from "./<%~ config.fileNames.dataContracts %>"
<% } %>

<% for (const route of routes) { %>
  <%~ includeFile('./procedure-call.ejs', { ...it, route }) %>

<% } %>

export const <%= apiClassName %>Service = (context: ServiceContext) => ({
  [Symbol.for("_rbm_ctx_")]: context,
  <% for (const route of routes) { %>
    <%~ route.routeName.usage %>,
  <% } %>
} as const);
