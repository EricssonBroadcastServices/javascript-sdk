{"version":3,"file":"time.js","sourceRoot":"/src/","sources":["utils/time.ts"],"names":[],"mappings":";;;AAAA,qDAAyC;AACzC,0CAAqC;AAgBxB,QAAA,sBAAsB,GAAG,UAAC,KAAa;IAClD,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC;IACvC,IAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;IACxD,IAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,GAAG,IAAI,GAAG,OAAO,GAAG,EAAE,CAAC,CAAC;IAEhE,OAAO;QACL,KAAK,EAAE,CAAC;QACR,MAAM,EAAE,CAAC;QACT,KAAK,EAAE,CAAC;QACR,IAAI,EAAE,CAAC;QACP,KAAK,OAAA;QACL,OAAO,SAAA;QACP,OAAO,SAAA;KACR,CAAC;AACJ,CAAC,CAAC;AAEW,QAAA,wBAAwB,GAAG,UAAC,cAAkC;;IACzE,IAAI,CAAC,cAAc,EAAE;QACnB,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC;KACrF;IACD,IAAM,QAAQ,GAAG,wBAAK,CAAC,cAAc,CAAC,CAAC;IACvC,OAAO;QACL,KAAK,QAAE,QAAQ,CAAC,KAAK,mCAAI,CAAC;QAC1B,MAAM,QAAE,QAAQ,CAAC,MAAM,mCAAI,CAAC;QAC5B,KAAK,QAAE,QAAQ,CAAC,KAAK,mCAAI,CAAC;QAC1B,IAAI,QAAE,QAAQ,CAAC,IAAI,mCAAI,CAAC;QACxB,KAAK,QAAE,QAAQ,CAAC,KAAK,mCAAI,CAAC;QAC1B,OAAO,QAAE,QAAQ,CAAC,OAAO,mCAAI,CAAC;QAC9B,OAAO,QAAE,QAAQ,CAAC,OAAO,mCAAI,CAAC;KAC/B,CAAC;AACJ,CAAC,CAAC;AAEW,QAAA,aAAa,GAAG,UAAC,IAAU;IACtC,OAAO,mBAAM,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;AAC/B,CAAC,CAAC;AAGW,QAAA,oBAAoB,GAAG,UAAC,KAAa;IAChD,IAAM,QAAQ,GAAG,8BAAsB,CAAC,KAAK,CAAC,CAAC;IAC/C,IAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;IAC7B,IAAM,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC;IACjC,IAAM,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC;IAEjC,OAAO,QACL,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,YAC7B,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC,EAAE,YACnC,OAAO,GAAG,CAAC,IAAI,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,KAAK,CAAC,CAAC,CAAC,EAAE,QAClD,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { parse } from \"iso8601-duration\";\nimport format from \"date-fns/format\";\n\nexport interface Duration {\n  years: number;\n  months: number;\n  weeks: number;\n  days: number;\n  hours: number;\n  minutes: number;\n  seconds: number;\n}\n\n/**\n * parseSecondsToDuration\n * parse seconds to duration, only parses to hours, minutes & seconds\n */\nexport const parseSecondsToDuration = (input: number): Duration => {\n  const hours = Math.floor(input / 3600);\n  const minutes = Math.floor((input - hours * 3600) / 60);\n  const seconds = Math.floor(input - hours * 3600 - minutes * 60);\n\n  return {\n    years: 0,\n    months: 0,\n    weeks: 0,\n    days: 0,\n    hours,\n    minutes,\n    seconds\n  };\n};\n\nexport const parseISOStringToDuration = (durationString: string | undefined): Duration => {\n  if (!durationString) {\n    return { years: 0, months: 0, weeks: 0, days: 0, hours: 0, minutes: 0, seconds: 0 };\n  }\n  const duration = parse(durationString);\n  return {\n    years: duration.years ?? 0,\n    months: duration.months ?? 0,\n    weeks: duration.weeks ?? 0,\n    days: duration.days ?? 0,\n    hours: duration.hours ?? 0,\n    minutes: duration.minutes ?? 0,\n    seconds: duration.seconds ?? 0\n  };\n};\n\nexport const getTimeString = (date: Date) => {\n  return format(date, \"HH:mm\");\n};\n\n// TODO localize this\nexport const getDurationLocalized = (input: number) => {\n  const duration = parseSecondsToDuration(input);\n  const hours = duration.hours;\n  const minutes = duration.minutes;\n  const seconds = duration.seconds;\n\n  return `\\\n  ${hours > 0 ? hours + \"h \" : \"\"}\\\n  ${minutes > 0 ? minutes + \"min \" : \"\"}\\\n  ${minutes < 1 && seconds > 0 ? seconds + \"sec\" : \"\"}\\\n  `;\n};\n"]}