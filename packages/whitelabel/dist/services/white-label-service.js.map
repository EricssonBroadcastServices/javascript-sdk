{"version":3,"file":"white-label-service.js","sourceRoot":"/src/","sources":["services/white-label-service.ts"],"names":[],"mappings":"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","sourcesContent":["import { BaseService, ServiceOptions, deserialize } from \"@EricssonBroadcastServices/exposure-sdk\";\nimport { WLConfig, WLPageModel, WLComponent, WLAsset, DeviceGroup } from \"../index\";\nimport querystring from \"query-string\";\n\ninterface WhiteLabelServiceOptions extends ServiceOptions {\n  deviceGroup: DeviceGroup,\n  origin: string\n}\n\nexport class WhiteLabelService extends BaseService {\n  private deviceGroup: DeviceGroup;\n  private origin: string;\n\n  constructor(apiOptions: WhiteLabelServiceOptions) {\n    const { deviceGroup, origin, ...baseOptions } = apiOptions;\n    super(baseOptions);\n\n    this.origin = origin;\n    this.deviceGroup = deviceGroup;\n  }\n\n  public getConfig({\n    locale,\n  }: { locale: string }) {\n    return this.get(`/api/internal/origin/config?locale=${locale}&deviceGroup=${this.deviceGroup}&origin=${this.origin}`)\n      .then(data => deserialize(WLConfig, data));\n  }\n\n  public getConfigByCustomerAndBusinessUnit({\n    locale,\n    customer,\n    businessUnit\n  }: { locale: string; customer: string; businessUnit: string}) {\n    return this.get(`/api/internal/customer/${customer}/businessunit/${businessUnit}/config?locale=${locale}&deviceGroup=${this.deviceGroup}`)\n      .then(data => deserialize(WLConfig, data));\n  }\n\n  public getTranslations(locale: string) {\n    return this.get(`/api/internal/translations/${locale}`);\n  }\n  public getPage({ customer, businessUnit, pageId, locale }: { customer: string; businessUnit: string; pageId: string; locale: string }) {\n    return this.get(`/api/internal/customer/${customer}/businessunit/${businessUnit}/page/${pageId}?deviceGroup=${this.deviceGroup}&locale=${locale}`)\n      .then(data => deserialize(WLPageModel, data));\n  }\n  public getComponentByInternalUrl<T extends WLComponent>({ internalUrl, type, useAuthHeader }: { internalUrl: string; type: new ()=> T; useAuthHeader: boolean }): Promise<T> {\n    const headers = useAuthHeader ? this.options.authHeader() : undefined;\n    return this.get(internalUrl, headers)\n      .then(data => deserialize(type, data));\n  }\n  public getAssetPageById({ customer, businessUnit, assetId, locale }: { customer: string; businessUnit: string; assetId: string; locale: string }) {\n    return this.get(`/api/internal/customer/${customer}/businessunit/${businessUnit}/detailPage/${assetId}?deviceGroup=${this.deviceGroup}&locale=${locale}`)\n      .then(data => deserialize(WLPageModel, data));\n  }\n\n  public getAssetById({ customer, businessUnit, assetId, locale }: { customer: string; businessUnit: string; assetId: string; locale: string }) {\n    return this.get(`/api/internal/exposure/v1/customer/${customer}/businessunit/${businessUnit}/content/asset/${assetId}?deviceGroup=${this.deviceGroup}&locale=${locale}&includeSeasons=true&fieldSet=ALL&includeEpisodes=true`)\n      .then(data => deserialize(WLAsset, data));\n  }\n\n  public getAssetsByIds({ customer, businessUnit, assetIds, locale }: { customer: string; businessUnit: string; assetIds: string[]; locale: string }): Promise<WLAsset[]> {\n    return this.getAssets({ customer, businessUnit, assetIds, locale })\n  }\n\n  public getAssets({ customer, businessUnit, locale, assetIds, sortOrder = \"-created\", products, type }: { type?: string; customer: string; businessUnit: string; assetIds?: string[]; locale: string; sortOrder?: string; products?: string[] }): Promise<WLAsset[]> {\n    const queryString = querystring.stringify({\n      locale,\n      deviceGroup: this.deviceGroup,\n      includeSeasons: true,\n      fieldSet: \"ALL\",\n      includeEpisodes: true,\n      assetIds,\n      sort: sortOrder,\n      products,\n      assetType: type\n    });\n    return this.get(`/api/internal/exposure/v1/customer/${customer}/businessunit/${businessUnit}/content/asset?${queryString}`)\n      .then(data => data.items.map(a => deserialize(WLAsset, a)));\n  }\n\n  public search({ url, searchTerm }: { url: string; searchTerm: string }): Promise<WLAsset[]> {\n    return this.get(url.replace(\"{query}\", searchTerm))\n      .then(data => {\n        return data.items.map(item => deserialize(WLAsset, item));\n      });\n  }\n}\n"]}